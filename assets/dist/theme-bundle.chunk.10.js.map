{"version":3,"sources":["webpack:///./assets/js/theme/search.js","webpack:///./assets/js/theme/common/form-utils.js","webpack:///./assets/js/theme/catalog.js","webpack:///./assets/js/theme/common/faceted-search.js"],"names":["Search","formatCategoryTreeForJSTree","node","_this","this","nodeData","text","data","id","metadata","state","selected","opened","children","forEach","childNode","push","showProducts","url","urlUtils","replaceParams","window","location","href","section","$productListingContainer","removeClass","$facetedSearchContainer","$contentResultsContainer","addClass","$","goToUrl","showContent","onReady","_this2","compareProducts","context","urls","$searchForm","$categoryTreeContainer","find","Url","parse","treeData","length","initFacetedSearch","onSortBySubmit","bind","hooks","on","collapsibleFactory","event","preventDefault","query","validator","initValidation","bindValidation","categoryTree","categoryTreeData","createCategoryTree","selectedCategoryIds","jstree","get_selected","check","remove","_iterator","_isArray","Array","isArray","_i","Symbol","iterator","_ref","next","done","value","categoryId","input","type","name","append","sessionStorage","getItem","handleCatalogProducts","show","loadTreeNodes","cb","_this3","ajax","selectedCategoryId","prefix","headers","x-xsrf-token","BCData","csrf_token","formattedResults","dataNode","$container","_this4","treeOptions","core","themes","icons","checkbox","three_state","plugins","_this5","$searchHeading","$searchCount","requestOptions","template","productListing","sidebar","heading","productCount","config","product_results","limit","searchProductsPerPage","showMore","facetedSearch","FacetedSearch","content","html","animate","scrollTop","$form","nod","submit","$element","add","selector","validate","errorMessage","performCheck","areAll","catalog_products","JSON","product_id","productSelector","attr","base_price","replace","tier_price","catalog_price","variantArr","getCatalogPrice","parseFloat","toFixed","each","catalogProductCount","parents","$catalogProductCounter","tier_price_array","qty","j","base_qty","price","initAdvqty","AdvQuantityUtil","initListingCardAction","$advQtyInputs","setUpAdvQtyMulti","bindInputEvents","bindButtonEvents","tips","l_idx","l_item","$input","handleQuantityChange","CatalogPage","inputTagNames","classifyForm","formSelector","options","$inputs","join","_options$formFieldCla","formFieldClass","__","specificClassName","$formField","parent","tagName","prop","toLowerCase","className","inputType","lodash_includes__WEBPACK_IMPORTED_MODULE_9___default","lodash_camelCase__WEBPACK_IMPORTED_MODULE_8___default","lodash_capitalize__WEBPACK_IMPORTED_MODULE_7___default","classifyInput","insertStateHiddenField","$stateField","stateFieldAttrs","$field","fieldId","match","getFieldId","after","Validators","setEmailValidation","field","val","forms","email","setPasswordValidation","passwordSelector","password2Selector","requirements","isOptional","$password","passwordValidations","result","RegExp","alpha","numeric","minlength","error","setMinMaxPriceValidation","selectors","errorSelector","fieldsetSelector","maxPriceSelector","minPriceSelector","configure","form","preventSubmit","successClass","setMessageOptions","errorSpan","setStateCountryValidation","cleanUpStateValidation","$fieldClassElement","Object","keys","classes","hasClass","queryParams","currentTarget","serialize","split","page","format","pathname","search","buildQueryString","PageManager","callback","defaultOptions","accordionToggleSelector","blockerSelector","clearFacetSelector","componentSelector","facetNavListSelector","priceRangeErrorSelector","priceRangeFieldsetSelector","priceRangeFormSelector","priceRangeMaxPriceSelector","priceRangeMinPriceSelector","showMoreToggleSelector","facetedSearchFilterItems","modal","modalFactory","modalOpen","lodash_extend__WEBPACK_IMPORTED_MODULE_4___default","collapsedFacets","collapsedFacetItems","initPriceValidator","index","navList","collapseFacetItems","accordionToggle","collapsible","isCollapsed","targetId","setTimeout","is","collapseAllFacets","onStateChange","onToggleClick","onAccordionToggle","onClearFacet","onFacetClick","onRangeSubmit","filterFacetItems","bindEvents","refreshView","restoreCollapsedFacets","restoreCollapsedFacetItems","updateView","api","getPage","getUrl","err","hide","Error","expandFacetItems","$navList","lodash_without__WEBPACK_IMPORTED_MODULE_3___default","hasMoreResults","lodash_union__WEBPACK_IMPORTED_MODULE_2___default","toggleFacetItems","lodash_includes__WEBPACK_IMPORTED_MODULE_1___default","getMoreFacetResults","facet","facetUrl","params","list_all","response","open","updateContent","$items","element","indexOf","expandFacet","$accordionToggle","collapseFacet","close","expandAllFacets","priceRangeValidator","_this6","_this7","unbindEvents","document","off","stopPropagation","$toggle","$link","toggleClass","constants","VALID","decodeURI"],"mappings":"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","file":"theme-bundle.chunk.10.js","sourcesContent":["import {\n    hooks\n} from '@bigcommerce/stencil-utils';\nimport CatalogPage from './catalog';\nimport $ from 'jquery';\nimport FacetedSearch from './common/faceted-search';\nimport urlUtils from './common/url-utils';\nimport Url from 'url';\nimport compareProducts from './global/compare-products';\nimport collapsibleFactory from './common/collapsible';\nimport 'jstree';\nimport nod from './common/nod';\nimport AdvQuantityUtil from './b2b/common/advQuantity';\n\nexport default class Search extends CatalogPage {\n    formatCategoryTreeForJSTree(node) {\n        const nodeData = {\n            text: node.data,\n            id: node.metadata.id,\n            state: {\n                selected: node.selected,\n            },\n        };\n\n        if (node.state) {\n            nodeData.state.opened = node.state === 'open';\n            nodeData.children = true;\n        }\n\n        if (node.children) {\n            nodeData.children = [];\n            node.children.forEach((childNode) => {\n                nodeData.children.push(this.formatCategoryTreeForJSTree(childNode));\n            });\n        }\n\n        return nodeData;\n    }\n\n    showProducts() {\n        const url = urlUtils.replaceParams(window.location.href, {\n            section: 'product',\n        });\n\n        this.$productListingContainer.removeClass('u-hiddenVisually');\n        this.$facetedSearchContainer.removeClass('u-hiddenVisually');\n        this.$contentResultsContainer.addClass('u-hiddenVisually');\n\n        $('[data-content-results-toggle]').removeClass('navBar-action-color--active');\n        $('[data-content-results-toggle]').addClass('navBar-action');\n\n        $('[data-product-results-toggle]').removeClass('navBar-action');\n        $('[data-product-results-toggle]').addClass('navBar-action-color--active');\n\n        urlUtils.goToUrl(url);\n    }\n\n    showContent() {\n        const url = urlUtils.replaceParams(window.location.href, {\n            section: 'content',\n        });\n\n        this.$contentResultsContainer.removeClass('u-hiddenVisually');\n        this.$productListingContainer.addClass('u-hiddenVisually');\n        this.$facetedSearchContainer.addClass('u-hiddenVisually');\n\n        $('[data-product-results-toggle]').removeClass('navBar-action-color--active');\n        $('[data-product-results-toggle]').addClass('navBar-action');\n\n        $('[data-content-results-toggle]').removeClass('navBar-action');\n        $('[data-content-results-toggle]').addClass('navBar-action-color--active');\n\n        urlUtils.goToUrl(url);\n    }\n\n    onReady() {\n        compareProducts(this.context.urls);\n        \n        const $searchForm = $('[data-advanced-search-form]');\n        const $categoryTreeContainer = $searchForm.find('[data-search-category-tree]');\n        const url = Url.parse(window.location.href, true);\n        const treeData = [];\n        this.$productListingContainer = $('#product-listing-container');\n        this.$facetedSearchContainer = $('#faceted-search-container');\n        this.$contentResultsContainer = $('#search-results-content');\n\n        // Init faceted search\n        if ($('#facetedSearch').length > 0) {\n            this.initFacetedSearch();\n        } else {\n            this.onSortBySubmit = this.onSortBySubmit.bind(this);\n            hooks.on('sortBy-submitted', this.onSortBySubmit);\n        }\n\n        // Init collapsibles\n        collapsibleFactory();\n\n        $('[data-product-results-toggle]').on('click', event => {\n            event.preventDefault();\n            this.showProducts();\n        });\n\n        $('[data-content-results-toggle]').on('click', event => {\n            event.preventDefault();\n            this.showContent();\n        });\n\n        if (this.$productListingContainer.find('li.product').length === 0 || url.query.section === 'content') {\n            this.showContent();\n        } else {\n            this.showProducts();\n        }\n\n        // const validator = this.initValidation($searchForm)\n        //     .bindValidation($searchForm.find('#'));\n        const validator = this.initValidation($searchForm)\n            .bindValidation($searchForm.find('#search_query_adv'));\n\n        this.context.categoryTree.forEach((node) => {\n            treeData.push(this.formatCategoryTreeForJSTree(node));\n        });\n\n        this.categoryTreeData = treeData;\n        this.createCategoryTree($categoryTreeContainer);\n\n        $searchForm.on('submit', event => {\n            const selectedCategoryIds = $categoryTreeContainer.jstree().get_selected();\n\n            if (!validator.check()) {\n                return event.preventDefault();\n            }\n\n            $searchForm.find('input[name=\"category\\[\\]\"]').remove();\n\n            for (const categoryId of selectedCategoryIds) {\n                const input = $('<input>', {\n                    type: 'hidden',\n                    name: 'category[]',\n                    value: categoryId,\n                });\n\n                $searchForm.append(input);\n            }\n        });\n\n        //for b2b user\n        if (sessionStorage.getItem(\"bundleb2b_user\") && sessionStorage.getItem(\"bundleb2b_user\") != \"none\") {\n            $(\".body\").addClass(\"b2b-products\");\n            this.handleCatalogProducts();\n        } else {\n            $(\".navList-item .product-count\").show();\n        }\n\n    }\n\n    loadTreeNodes(node, cb) {\n        $.ajax({\n            url: '/remote/v1/category-tree',\n            data: {\n                selectedCategoryId: node.id,\n                prefix: 'category',\n            },\n            headers: {\n                'x-xsrf-token': window.BCData && window.BCData.csrf_token ? window.BCData.csrf_token : '',\n            },\n        }).done(data => {\n            const formattedResults = [];\n\n            data.forEach((dataNode) => {\n                formattedResults.push(this.formatCategoryTreeForJSTree(dataNode));\n            });\n\n            cb(formattedResults);\n        });\n    }\n\n    createCategoryTree($container) {\n        const treeOptions = {\n            core: {\n                data: (node, cb) => {\n                    // Root node\n                    if (node.id === '#') {\n                        cb(this.categoryTreeData);\n                    } else {\n                        // Lazy loaded children\n                        this.loadTreeNodes(node, cb);\n                    }\n                },\n                themes: {\n                    icons: true,\n                },\n            },\n            checkbox: {\n                three_state: false,\n            },\n            plugins: [\n                'checkbox',\n            ],\n        };\n\n        $container.jstree(treeOptions);\n    }\n\n    initFacetedSearch() {\n        const $productListingContainer = $('#product-listing-container');\n        const $facetedSearchContainer = $('#faceted-search-container');\n        const $searchHeading = $('#search-results-heading');\n        const $searchCount = $('#search-results-product-count');\n        const productsPerPage = this.context.searchProductsPerPage;\n        const requestOptions = {\n            template: {\n                productListing: 'search/product-listing',\n                sidebar: 'search/sidebar',\n                heading: 'search/heading',\n                productCount: 'search/product-count',\n            },\n            config: {\n                product_results: {\n                    limit: productsPerPage,\n                },\n            },\n            showMore: 'search/show-more',\n        };\n\n        this.facetedSearch = new FacetedSearch(requestOptions, (content) => {\n            $productListingContainer.html(content.productListing);\n            $facetedSearchContainer.html(content.sidebar);\n            $searchHeading.html(content.heading);\n            $searchCount.html(content.productCount);\n            if (sessionStorage.getItem(\"bundleb2b_user\") && sessionStorage.getItem(\"bundleb2b_user\") != \"none\") {\n                //for b2b user\n                this.handleCatalogProducts();\n            } else {\n                //for non b2b user\n                $(\".navList-item .product-count\").show();\n            }\n            $('html, body').animate({\n                scrollTop: 0,\n            }, 100);\n        });\n    }\n\n    initValidation($form) {\n        this.$form = $form;\n        this.validator = nod({\n            submit: $form,\n        });\n\n        return this;\n    }\n\n    bindValidation($element) {\n        if (this.validator) {\n            this.validator.add({\n                selector: $element,\n                validate: 'presence',\n                errorMessage: $element.data('errorMessage'),\n            });\n        }\n\n        return this;\n    }\n\n    check() {\n        if (this.validator) {\n            this.validator.performCheck();\n            return this.validator.areAll('valid');\n        }\n\n        return false;\n    }\n    //for b2b\n    handleCatalogProducts() {\n        const catalog_products = JSON.parse(sessionStorage.getItem(\"catalog_products\"));\n        const products = $(\".product\");\n\n        for (var product_id in catalog_products) {\n\n            const productSelector = `[catalog-product-${product_id}]`;\n            if ($(`${productSelector}`).length > 0) {\n\n                $(`${productSelector}`).attr(\"catalog-product\", \"true\");\n\n                let base_price = $(`${productSelector}`).find(\".price.price--withTax\").text().replace(\"$\", \"\").replace(\",\", \"\") || $(`${productSelector}`).find(\".price.price--withoutTax\").text().replace(\"$\", \"\").replace(\",\", \"\");\n                let tier_price;\n                let catalog_price;\n                const variantArr = catalog_products[product_id] || [];\n                if (variantArr.length == 1) {\n                    tier_price = variantArr[0].tier_price || [];\n                    catalog_price = this.getCatalogPrice(base_price, tier_price, 1);\n                }\n                if (catalog_price) {\n                    $(`${productSelector}`).find(\".price.price--withoutTax\").text(\"$\" + parseFloat(catalog_price).toFixed(2));\n                    $(`${productSelector}`).find(\".price.price--withTax\").text(\"$\" + parseFloat(catalog_price).toFixed(2));\n                }\n            }\n        }\n\n        //product Gallery, for listing page\n        const $productGallery = $(\"[b2b-products-gallery]\");\n        $productGallery.each(function() {\n            const catalogProductCount = $(this).find(\"[catalog-product]\").length;\n            if (catalogProductCount == 0) {\n                $(\"[catalog-listing-wrap]\").show();\n                $(this).parents(\".page\").html(\"We can't find products matching the selection.\");\n            } else {\n                $(\"[catalog-listing-wrap]\").show();\n                const $catalogProductCounter = $(\"[data-catalog-product-counter]\");\n                if ($catalogProductCounter.length > 0) {\n                    $catalogProductCounter.text(catalogProductCount);\n                }\n            }\n        });\n\n    }\n    //for bundleb2b\n    getCatalogPrice(base_price, tier_price_array, qty) {\n        //let tier_price = base_price;\n        let tier_price = base_price;\n\n        for (let j = 0; j < tier_price_array.length; j++) {\n            const type = tier_price_array[j].type;\n            const base_qty = tier_price_array[j].qty;\n            const price = tier_price_array[j].price;\n\n            if (qty >= base_qty) {\n                if (type == \"fixed\") {\n                    tier_price = price;\n\n                } else {\n                    tier_price = base_price - base_price * price / 100;\n                }\n            }\n        }\n        return tier_price;\n    }\n\n    initAdvqty() {\n        AdvQuantityUtil.initListingCardAction();\n        const $advQtyInputs = $(\"[advqty-card-actions] [advqty-card-input]\");\n        AdvQuantityUtil.setUpAdvQtyMulti($advQtyInputs, {\n            bindInputEvents: true,\n            bindButtonEvents: true,\n            tips: true\n        }, () => {\n            $advQtyInputs.each((l_idx, l_item) => {\n                const $input = $(l_item);\n                AdvQuantityUtil.handleQuantityChange(null, $input, true);\n            });\n        });\n    }\n}","import _ from 'lodash';\nimport nod from './nod';\nimport forms from './models/forms';\n\nconst inputTagNames = [\n    'input',\n    'select',\n    'textarea',\n];\n\n/**\n * Apply class name to an input element on its type\n * @param {object} input\n * @param {string} formFieldClass\n * @return {object} Element itself\n */\nfunction classifyInput(input, formFieldClass) {\n    const $input = $(input);\n    const $formField = $input.parent(`.${formFieldClass}`);\n    const tagName = $input.prop('tagName').toLowerCase();\n\n    let className = `${formFieldClass}--${tagName}`;\n    let specificClassName;\n\n    // Input can be text/checkbox/radio etc...\n    if (tagName === 'input') {\n        const inputType = $input.prop('type');\n\n        if (_.includes(['radio', 'checkbox', 'submit'], inputType)) {\n            // ie: .form-field--checkbox, .form-field--radio\n            className = `${formFieldClass}--${_.camelCase(inputType)}`;\n        } else {\n            // ie: .form-field--input .form-field--inputText\n            specificClassName = `${className}${_.capitalize(inputType)}`;\n        }\n    }\n\n    // Apply class modifier\n    return $formField\n        .addClass(className)\n        .addClass(specificClassName);\n}\n\n/**\n * Apply class name to each input element in a form based on its type\n * @example\n * // Before\n * <form id=\"form\">\n *     <div class=\"form-field\">\n *         <input type=\"text\">\n *     </div>\n *     <div class=\"form-field\">\n *         <select>...</select>\n *     </div>\n * </form>\n *\n * classifyForm('#form', { formFieldClass: 'form-field' });\n *\n * // After\n * <div class=\"form-field form-field--input form-field--inputText\">...</div>\n * <div class=\"form-field form-field--select\">...</div>\n *\n * @param {string|object} formSelector - selector or element\n * @param {object} options\n * @return {jQuery} Element itself\n */\nexport function classifyForm(formSelector, options = {}) {\n    const $form = $(formSelector);\n    const $inputs = $form.find(inputTagNames.join(', '));\n\n    // Obtain options\n    const { formFieldClass = 'form-field' } = options;\n\n    // Classify each input in a form\n    $inputs.each((__, input) => {\n        classifyInput(input, formFieldClass);\n    });\n\n    return $form;\n}\n\n/**\n * Get id from given field\n * @param {object} $field JQuery field object\n * @return {string}\n */\nfunction getFieldId($field) {\n    const fieldId = $field.prop('name').match(/(\\[.*\\])/);\n\n    if (fieldId && fieldId.length !== 0) {\n        return fieldId[0];\n    }\n\n    return '';\n}\n\n/**\n * Insert hidden field after State/Province field\n * @param {object} $stateField JQuery field object\n */\nfunction insertStateHiddenField($stateField) {\n    const fieldId = getFieldId($stateField);\n    const stateFieldAttrs = {\n        type: 'hidden',\n        name: `FormFieldIsText${fieldId}`,\n        value: '1',\n    };\n\n    $stateField.after($('<input />', stateFieldAttrs));\n}\n\nconst Validators = {\n    /**\n     * Sets up a new validation when the form is dirty\n     * @param validator\n     * @param field\n     */\n    setEmailValidation: (validator, field) => {\n        if (field) {\n            validator.add({\n                selector: field,\n                validate: (cb, val) => {\n                    const result = forms.email(val);\n\n                    cb(result);\n                },\n                errorMessage: 'You must enter a valid email.',\n            });\n        }\n    },\n\n    /**\n     * Validate password fields\n     * @param validator\n     * @param passwordSelector\n     * @param password2Selector\n     * @param requirements\n     * @param isOptional\n     */\n    setPasswordValidation: (validator, passwordSelector, password2Selector, requirements, isOptional) => {\n        const $password = $(passwordSelector);\n        const passwordValidations = [\n            {\n                selector: passwordSelector,\n                validate: (cb, val) => {\n                    const result = val.length;\n\n                    if (isOptional) {\n                        return cb(true);\n                    }\n\n                    cb(result);\n                },\n                errorMessage: 'You must enter a password.',\n            },\n            {\n                selector: passwordSelector,\n                validate: (cb, val) => {\n                    const result = val.match(new RegExp(requirements.alpha))\n                        && val.match(new RegExp(requirements.numeric))\n                        && val.length >= requirements.minlength;\n\n                    // If optional and nothing entered, it is valid\n                    if (isOptional && val.length === 0) {\n                        return cb(true);\n                    }\n\n                    cb(result);\n                },\n                errorMessage: requirements.error,\n            },\n            {\n                selector: password2Selector,\n                validate: (cb, val) => {\n                    const result = val.length;\n\n                    if (isOptional) {\n                        return cb(true);\n                    }\n\n                    cb(result);\n                },\n                errorMessage: 'You must enter a password.',\n            },\n            {\n                selector: password2Selector,\n                validate: (cb, val) => {\n                    const result = val === $password.val();\n\n                    cb(result);\n                },\n                errorMessage: 'Your passwords do not match.',\n            },\n        ];\n\n        validator.add(passwordValidations);\n    },\n\n    /**\n     * Validate password fields\n     * @param {Nod} validator\n     * @param {Object} selectors\n     * @param {string} selectors.errorSelector\n     * @param {string} selectors.fieldsetSelector\n     * @param {string} selectors.formSelector\n     * @param {string} selectors.maxPriceSelector\n     * @param {string} selectors.minPriceSelector\n     */\n    setMinMaxPriceValidation: (validator, selectors) => {\n        const {\n            errorSelector,\n            fieldsetSelector,\n            formSelector,\n            maxPriceSelector,\n            minPriceSelector,\n        } = selectors;\n\n        validator.configure({\n            form: formSelector,\n            preventSubmit: true,\n            successClass: '_', // KLUDGE: Don't apply success class\n        });\n\n        validator.add({\n            errorMessage: 'Min price must be less than max. price.',\n            selector: minPriceSelector,\n            validate: `min-max:${minPriceSelector}:${maxPriceSelector}`,\n        });\n\n        validator.add({\n            errorMessage: 'Min price must be less than max. price.',\n            selector: maxPriceSelector,\n            validate: `min-max:${minPriceSelector}:${maxPriceSelector}`,\n        });\n\n        validator.add({\n            errorMessage: 'Max. price is required.',\n            selector: maxPriceSelector,\n            validate: 'presence',\n        });\n\n        validator.add({\n            errorMessage: 'Min. price is required.',\n            selector: minPriceSelector,\n            validate: 'presence',\n        });\n\n        validator.add({\n            errorMessage: 'Input must be greater than 0.',\n            selector: [minPriceSelector, maxPriceSelector],\n            validate: 'min-number:0',\n        });\n\n        validator.setMessageOptions({\n            selector: [minPriceSelector, maxPriceSelector],\n            parent: fieldsetSelector,\n            errorSpan: errorSelector,\n        });\n    },\n\n    /**\n     * Sets up a new validation when the form is dirty\n     * @param validator\n     * @param field\n     */\n    setStateCountryValidation: (validator, field) => {\n        if (field) {\n            validator.add({\n                selector: field,\n                validate: 'presence',\n                errorMessage: 'The \\'State/Province\\' field cannot be blank.',\n            });\n        }\n    },\n\n    /**\n     * Removes classes from dirty form if previously checked\n     * @param field\n     */\n    cleanUpStateValidation: (field) => {\n        const $fieldClassElement = $((`[data-type=\"${field.data('fieldType')}\"]`));\n\n        Object.keys(nod.classes).forEach((value) => {\n            if ($fieldClassElement.hasClass(nod.classes[value])) {\n                $fieldClassElement.removeClass(nod.classes[value]);\n            }\n        });\n    },\n};\n\nexport { Validators, insertStateHiddenField };\n","import PageManager from './page-manager';\nimport urlUtils from './common/url-utils';\nimport Url from 'url';\n\nexport default class CatalogPage extends PageManager {\n    onSortBySubmit(event) {\n        const url = Url.parse(window.location.href, true);\n        const queryParams = $(event.currentTarget).serialize().split('=');\n\n        url.query[queryParams[0]] = queryParams[1];\n        delete url.query.page;\n\n        event.preventDefault();\n        window.location = Url.format({ pathname: url.pathname, search: urlUtils.buildQueryString(url.query) });\n    }\n}\n","import { hooks, api } from '@bigcommerce/stencil-utils';\nimport _ from 'lodash';\nimport Url from 'url';\nimport urlUtils from './url-utils';\nimport modalFactory from '../global/modal';\nimport collapsibleFactory from './collapsible';\nimport { Validators } from './form-utils';\nimport nod from './nod';\n\n/**\n * Faceted search view component\n */\nclass FacetedSearch {\n    /**\n     * @param {object} requestOptions - Object with options for the ajax requests\n     * @param {function} callback - Function to execute after fetching templates\n     * @param {object} options - Configurable options\n     * @example\n     *\n     * let requestOptions = {\n     *      templates: {\n     *          productListing: 'category/product-listing',\n     *          sidebar: 'category/sidebar'\n     *     }\n     * };\n     *\n     * let templatesDidLoad = function(content) {\n     *     $productListingContainer.html(content.productListing);\n     *     $facetedSearchContainer.html(content.sidebar);\n     * };\n     *\n     * let facetedSearch = new FacetedSearch(requestOptions, templatesDidLoad);\n     */\n    constructor(requestOptions, callback, options) {\n        const defaultOptions = {\n            accordionToggleSelector: '#facetedSearch .accordion-navigation, #facetedSearch .facetedSearch-toggle',\n            blockerSelector: '#facetedSearch .blocker',\n            clearFacetSelector: '#facetedSearch .facetedSearch-clearLink',\n            componentSelector: '#facetedSearch-navList',\n            facetNavListSelector: '#facetedSearch .navList',\n            priceRangeErrorSelector: '#facet-range-form .form-inlineMessage',\n            priceRangeFieldsetSelector: '#facet-range-form .form-fieldset',\n            priceRangeFormSelector: '#facet-range-form',\n            priceRangeMaxPriceSelector: '#facet-range-form [name=max_price]',\n            priceRangeMinPriceSelector: '#facet-range-form [name=min_price]',\n            showMoreToggleSelector: '#facetedSearch .accordion-content .toggleLink',\n            facetedSearchFilterItems: '#facetedSearch-filterItems .form-input',\n            modal: modalFactory('#modal')[0],\n            modalOpen: false,\n        };\n\n        // Private properties\n        this.requestOptions = requestOptions;\n        this.callback = callback;\n        this.options = _.extend({}, defaultOptions, options);\n        this.collapsedFacets = [];\n        this.collapsedFacetItems = [];\n\n        // Init collapsibles\n        collapsibleFactory();\n\n        // Init price validator\n        this.initPriceValidator();\n\n        // Show limited items by default\n        $(this.options.facetNavListSelector).each((index, navList) => {\n            this.collapseFacetItems($(navList));\n        });\n\n        // Mark initially collapsed accordions\n        $(this.options.accordionToggleSelector).each((index, accordionToggle) => {\n            const $accordionToggle = $(accordionToggle);\n            const collapsible = $accordionToggle.data('collapsibleInstance');\n\n            if (collapsible.isCollapsed) {\n                this.collapsedFacets.push(collapsible.targetId);\n            }\n        });\n\n        // Collapse all facets if initially hidden\n        // NOTE: Need to execute after Collapsible gets bootstrapped\n        setTimeout(() => {\n            if ($(this.options.componentSelector).is(':hidden')) {\n                this.collapseAllFacets();\n            }\n        });\n\n        // Observe user events\n        this.onStateChange = this.onStateChange.bind(this);\n        this.onToggleClick = this.onToggleClick.bind(this);\n        this.onAccordionToggle = this.onAccordionToggle.bind(this);\n        this.onClearFacet = this.onClearFacet.bind(this);\n        this.onFacetClick = this.onFacetClick.bind(this);\n        this.onRangeSubmit = this.onRangeSubmit.bind(this);\n        this.onSortBySubmit = this.onSortBySubmit.bind(this);\n        this.filterFacetItems = this.filterFacetItems.bind(this);\n\n        this.bindEvents();\n    }\n\n    // Public methods\n    refreshView(content) {\n        if (content) {\n            this.callback(content);\n        }\n\n        // Init collapsibles\n        collapsibleFactory();\n\n        // Init price validator\n        this.initPriceValidator();\n\n        // Restore view state\n        this.restoreCollapsedFacets();\n        this.restoreCollapsedFacetItems();\n\n        // Bind events\n        this.bindEvents();\n    }\n\n    updateView() {\n        $(this.options.blockerSelector).show();\n\n        api.getPage(urlUtils.getUrl(), this.requestOptions, (err, content) => {\n            $(this.options.blockerSelector).hide();\n\n            if (err) {\n                throw new Error(err);\n            }\n\n            // Refresh view with new content\n            this.refreshView(content);\n        });\n    }\n\n    expandFacetItems($navList) {\n        const id = $navList.attr('id');\n\n        // Remove\n        this.collapsedFacetItems = _.without(this.collapsedFacetItems, id);\n    }\n\n    collapseFacetItems($navList) {\n        const id = $navList.attr('id');\n        const hasMoreResults = $navList.data('hasMoreResults');\n\n        if (hasMoreResults) {\n            this.collapsedFacetItems = _.union(this.collapsedFacetItems, [id]);\n        } else {\n            this.collapsedFacetItems = _.without(this.collapsedFacetItems, id);\n        }\n    }\n\n    toggleFacetItems($navList) {\n        const id = $navList.attr('id');\n\n        // Toggle depending on `collapsed` flag\n        if (_.includes(this.collapsedFacetItems, id)) {\n            this.getMoreFacetResults($navList);\n\n            return true;\n        }\n\n        this.collapseFacetItems($navList);\n\n        return false;\n    }\n\n    getMoreFacetResults($navList) {\n        const facet = $navList.data('facet');\n        const facetUrl = urlUtils.getUrl();\n\n        if (this.requestOptions.showMore) {\n            api.getPage(facetUrl, {\n                template: this.requestOptions.showMore,\n                params: {\n                    list_all: facet,\n                },\n            }, (err, response) => {\n                if (err) {\n                    throw new Error(err);\n                }\n\n                this.options.modal.open();\n                this.options.modalOpen = true;\n                this.options.modal.updateContent(response);\n            });\n        }\n\n        this.collapseFacetItems($navList);\n\n        return false;\n    }\n\n    filterFacetItems(event) {\n        const $items = $('.navList-item');\n        const query = $(event.currentTarget).val().toLowerCase();\n\n        $items.each((index, element) => {\n            const text = $(element).text().toLowerCase();\n            if (text.indexOf(query) !== -1) {\n                $(element).show();\n            } else {\n                $(element).hide();\n            }\n        });\n    }\n\n    expandFacet($accordionToggle) {\n        const collapsible = $accordionToggle.data('collapsibleInstance');\n\n        collapsible.open();\n    }\n\n    collapseFacet($accordionToggle) {\n        const collapsible = $accordionToggle.data('collapsibleInstance');\n\n        collapsible.close();\n    }\n\n    collapseAllFacets() {\n        const $accordionToggles = $(this.options.accordionToggleSelector);\n\n        $accordionToggles.each((index, accordionToggle) => {\n            const $accordionToggle = $(accordionToggle);\n\n            this.collapseFacet($accordionToggle);\n        });\n    }\n\n    expandAllFacets() {\n        const $accordionToggles = $(this.options.accordionToggleSelector);\n\n        $accordionToggles.each((index, accordionToggle) => {\n            const $accordionToggle = $(accordionToggle);\n\n            this.expandFacet($accordionToggle);\n        });\n    }\n\n    // Private methods\n    initPriceValidator() {\n        if ($(this.options.priceRangeFormSelector).length === 0) {\n            return;\n        }\n\n        const validator = nod();\n        const selectors = {\n            errorSelector: this.options.priceRangeErrorSelector,\n            fieldsetSelector: this.options.priceRangeFieldsetSelector,\n            formSelector: this.options.priceRangeFormSelector,\n            maxPriceSelector: this.options.priceRangeMaxPriceSelector,\n            minPriceSelector: this.options.priceRangeMinPriceSelector,\n        };\n\n        Validators.setMinMaxPriceValidation(validator, selectors);\n\n        this.priceRangeValidator = validator;\n    }\n\n    restoreCollapsedFacetItems() {\n        const $navLists = $(this.options.facetNavListSelector);\n\n        // Restore collapsed state for each facet\n        $navLists.each((index, navList) => {\n            const $navList = $(navList);\n            const id = $navList.attr('id');\n            const shouldCollapse = _.includes(this.collapsedFacetItems, id);\n\n            if (shouldCollapse) {\n                this.collapseFacetItems($navList);\n            } else {\n                this.expandFacetItems($navList);\n            }\n        });\n    }\n\n    restoreCollapsedFacets() {\n        const $accordionToggles = $(this.options.accordionToggleSelector);\n\n        $accordionToggles.each((index, accordionToggle) => {\n            const $accordionToggle = $(accordionToggle);\n            const collapsible = $accordionToggle.data('collapsibleInstance');\n            const id = collapsible.targetId;\n            const shouldCollapse = _.includes(this.collapsedFacets, id);\n\n            if (shouldCollapse) {\n                this.collapseFacet($accordionToggle);\n            } else {\n                this.expandFacet($accordionToggle);\n            }\n        });\n    }\n\n    bindEvents() {\n        // Clean-up\n        this.unbindEvents();\n\n        // DOM events\n        $(window).on('statechange', this.onStateChange);\n        $(document).on('click', this.options.showMoreToggleSelector, this.onToggleClick);\n        $(document).on('toggle.collapsible', this.options.accordionToggleSelector, this.onAccordionToggle);\n        $(document).on('keyup', this.options.facetedSearchFilterItems, this.filterFacetItems);\n        $(this.options.clearFacetSelector).on('click', this.onClearFacet);\n\n        // Hooks\n        hooks.on('facetedSearch-facet-clicked', this.onFacetClick);\n        hooks.on('facetedSearch-range-submitted', this.onRangeSubmit);\n        hooks.on('sortBy-submitted', this.onSortBySubmit);\n    }\n\n    unbindEvents() {\n        // DOM events\n        $(window).off('statechange', this.onStateChange);\n        $(document).off('click', this.options.showMoreToggleSelector, this.onToggleClick);\n        $(document).off('toggle.collapsible', this.options.accordionToggleSelector, this.onAccordionToggle);\n        $(document).off('keyup', this.options.facetedSearchFilterItems, this.filterFacetItems);\n        $(this.options.clearFacetSelector).off('click', this.onClearFacet);\n\n        // Hooks\n        hooks.off('facetedSearch-facet-clicked', this.onFacetClick);\n        hooks.off('facetedSearch-range-submitted', this.onRangeSubmit);\n        hooks.off('sortBy-submitted', this.onSortBySubmit);\n    }\n\n    onClearFacet(event) {\n        const $link = $(event.currentTarget);\n        const url = $link.attr('href');\n\n        event.preventDefault();\n        event.stopPropagation();\n\n        // Update URL\n        urlUtils.goToUrl(url);\n    }\n\n    onToggleClick(event) {\n        const $toggle = $(event.currentTarget);\n        const $navList = $($toggle.attr('href'));\n\n        // Prevent default\n        event.preventDefault();\n\n        // Toggle visible items\n        this.toggleFacetItems($navList);\n    }\n\n    onFacetClick(event) {\n        const $link = $(event.currentTarget);\n        const url = $link.attr('href');\n\n        event.preventDefault();\n\n        $link.toggleClass('is-selected');\n\n        // Update URL\n        urlUtils.goToUrl(url);\n\n        if (this.options.modalOpen) {\n            this.options.modal.close();\n        }\n    }\n\n    onSortBySubmit(event) {\n        const url = Url.parse(window.location.href, true);\n        const queryParams = $(event.currentTarget).serialize().split('=');\n\n        url.query[queryParams[0]] = queryParams[1];\n        delete url.query.page;\n\n        event.preventDefault();\n\n        urlUtils.goToUrl(Url.format({ pathname: url.pathname, search: urlUtils.buildQueryString(url.query) }));\n    }\n\n    onRangeSubmit(event) {\n        event.preventDefault();\n\n        if (!this.priceRangeValidator.areAll(nod.constants.VALID)) {\n            return;\n        }\n\n        const url = Url.parse(window.location.href);\n        const queryParams = decodeURI($(event.currentTarget).serialize());\n\n        urlUtils.goToUrl(Url.format({ pathname: url.pathname, search: `?${queryParams}` }));\n    }\n\n    onStateChange() {\n        this.updateView();\n    }\n\n    onAccordionToggle(event) {\n        const $accordionToggle = $(event.currentTarget);\n        const collapsible = $accordionToggle.data('collapsibleInstance');\n        const id = collapsible.targetId;\n\n        if (collapsible.isCollapsed) {\n            this.collapsedFacets = _.union(this.collapsedFacets, [id]);\n        } else {\n            this.collapsedFacets = _.without(this.collapsedFacets, id);\n        }\n    }\n}\n\nexport default FacetedSearch;\n"],"sourceRoot":""}