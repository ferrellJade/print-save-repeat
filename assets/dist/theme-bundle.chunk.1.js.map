{"version":3,"sources":["webpack:///./assets/js/theme/product.js","webpack:///./node_modules/lodash/toString.js","webpack:///./node_modules/lodash/capitalize.js","webpack:///./node_modules/lodash/_hasUnicode.js","webpack:///./node_modules/lodash/_baseIndexOf.js","webpack:///./assets/js/theme/common/form-utils.js","webpack:///./node_modules/lodash/includes.js","webpack:///./node_modules/lodash/upperFirst.js","webpack:///./node_modules/lodash/_createCaseFirst.js","webpack:///./node_modules/lodash/_castSlice.js","webpack:///./node_modules/lodash/_baseSlice.js","webpack:///./node_modules/lodash/_stringToArray.js","webpack:///./node_modules/lodash/_asciiToArray.js","webpack:///./node_modules/lodash/_unicodeToArray.js","webpack:///./node_modules/lodash/camelCase.js","webpack:///./node_modules/lodash/_createCompounder.js","webpack:///./node_modules/lodash/_arrayReduce.js","webpack:///./node_modules/lodash/deburr.js","webpack:///./node_modules/lodash/words.js","webpack:///./node_modules/lodash/_asciiWords.js","webpack:///./node_modules/lodash/_hasUnicodeWord.js","webpack:///./node_modules/lodash/_unicodeWords.js","webpack:///./assets/js/theme/product/reviews.js","webpack:///./assets/js/theme/product/video-gallery.js"],"names":["Product","context","_this","_PageManager","call","this","url","window","location","href","$reviewLink","$","onReady","validator","_this2","document","on","indexOf","history","replaceState","title","pathname","collapsibleFactory","productDetails","ProductDetails","BCData","product_attributes","setProductVariant","videoGallery","$reviewForm","classifyForm","review","Review","registerValidation","performCheck","areAll","productReviewHandler","trigger","PageManager","module","exports","value","toString","__webpack_require__","upperFirst","string","toLowerCase","reHasUnicode","RegExp","test","array","fromIndex","index","length","inputTagNames","formSelector","options","$form","$inputs","find","join","_options$formFieldCla","formFieldClass","each","__","input","specificClassName","$input","$formField","parent","tagName","prop","className","inputType","lodash_includes__WEBPACK_IMPORTED_MODULE_9___default","lodash_camelCase__WEBPACK_IMPORTED_MODULE_8___default","lodash_capitalize__WEBPACK_IMPORTED_MODULE_7___default","addClass","classifyInput","insertStateHiddenField","$stateField","stateFieldAttrs","type","name","$field","fieldId","match","getFieldId","after","Validators","setEmailValidation","field","add","selector","validate","cb","val","forms","email","errorMessage","setPasswordValidation","passwordSelector","password2Selector","requirements","isOptional","$password","passwordValidations","result","alpha","numeric","minlength","error","setMinMaxPriceValidation","selectors","errorSelector","fieldsetSelector","maxPriceSelector","minPriceSelector","configure","form","preventSubmit","successClass","setMessageOptions","errorSpan","setStateCountryValidation","cleanUpStateValidation","$fieldClassElement","data","Object","keys","nod","classes","forEach","hasClass","removeClass","baseIndexOf","createCaseFirst","castSlice","hasUnicode","stringToArray","methodName","strSymbols","undefined","chr","charAt","trailing","slice","baseSlice","start","end","Array","asciiToArray","unicodeToArray","split","rsAstral","rsCombo","rsFitz","rsNonAstral","rsRegional","rsSurrPair","reOptMod","rsSeq","rsSymbol","reUnicode","capitalize","camelCase","createCompounder","word","arrayReduce","deburr","words","reApos","callback","replace","iteratee","accumulator","initAccum","asciiWords","hasUnicodeWord","unicodeWords","pattern","guard","reAsciiWord","reHasUnicodeWord","rsBreakRange","rsMathOpRange","rsBreak","rsDigits","rsDingbat","rsLower","rsMisc","rsUpper","rsMiscLower","rsMiscUpper","rsModifier","rsEmoji","reUnicodeWord","_default","submit","$reviewsContent","$collapsible","initLinkBind","injectPaginationLink","collapseReviews","$content","CollapsibleEvents","click","hash","$nextLink","$prevLink","attr","reviewRating","reviewSubject","reviewComment","reviewEmail","VideoGallery","$element","$player","$videos","currentVideo","bindEvents","_proto","prototype","selectNewVideo","e","preventDefault","$target","currentTarget","id","$selectedThumb","setMainVideo","setActiveThumb","bind","element","$el"],"mappings":"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","file":"theme-bundle.chunk.1.js","sourcesContent":["/*\n Import all product specific js\n */\nimport PageManager from './page-manager';\nimport Review from './product/reviews';\nimport collapsibleFactory from './common/collapsible';\nimport ProductDetails from './common/product-details';\nimport videoGallery from './product/video-gallery';\nimport { classifyForm } from './common/form-utils';\n\nexport default class Product extends PageManager {\n    constructor(context) {\n        super(context);\n        this.url = window.location.href;\n        this.$reviewLink = $('[data-reveal-id=\"modal-review-form\"]');\n    }\n\n    onReady() {\n        // Listen for foundation modal close events to sanitize URL after review.\n        $(document).on('close.fndtn.reveal', () => {\n            if (this.url.indexOf('#write_review') !== -1 && typeof window.history.replaceState === 'function') {\n                window.history.replaceState(null, document.title, window.location.pathname);\n            }\n        });\n\n        let validator;\n\n        // Init collapsible\n        collapsibleFactory();\n\n        this.productDetails = new ProductDetails($('.productView'), this.context, window.BCData.product_attributes);\n        this.productDetails.setProductVariant();\n\n        videoGallery();\n\n        const $reviewForm = classifyForm('.writeReview-form');\n        const review = new Review($reviewForm);\n\n        $('body').on('click', '[data-reveal-id=\"modal-review-form\"]', () => {\n            validator = review.registerValidation(this.context);\n        });\n\n        $reviewForm.on('submit', () => {\n            if (validator) {\n                validator.performCheck();\n                return validator.areAll('valid');\n            }\n\n            return false;\n        });\n\n        this.productReviewHandler();\n    }\n\n    productReviewHandler() {\n        if (this.url.indexOf('#write_review') !== -1) {\n            this.$reviewLink.trigger('click');\n        }\n    }\n}\n","/**\n * This method returns the first argument it receives.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'a': 1 };\n *\n * console.log(_.identity(object) === object);\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\nmodule.exports = identity;\n","var toString = require('./toString'),\n    upperFirst = require('./upperFirst');\n\n/**\n * Converts the first character of `string` to upper case and the remaining\n * to lower case.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to capitalize.\n * @returns {string} Returns the capitalized string.\n * @example\n *\n * _.capitalize('FRED');\n * // => 'Fred'\n */\nfunction capitalize(string) {\n  return upperFirst(toString(string).toLowerCase());\n}\n\nmodule.exports = capitalize;\n","/** Used to compose unicode character classes. */\nvar rsAstralRange = '\\\\ud800-\\\\udfff',\n    rsComboMarksRange = '\\\\u0300-\\\\u036f',\n    reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n    rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n    rsVarRange = '\\\\ufe0e\\\\ufe0f';\n\n/** Used to compose unicode capture groups. */\nvar rsZWJ = '\\\\u200d';\n\n/** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */\nvar reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange  + rsComboRange + rsVarRange + ']');\n\n/**\n * Checks if `string` contains Unicode symbols.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {boolean} Returns `true` if a symbol is found, else `false`.\n */\nfunction hasUnicode(string) {\n  return reHasUnicode.test(string);\n}\n\nmodule.exports = hasUnicode;\n","/**\n * A specialized version of `_.indexOf` which performs strict equality\n * comparisons of values, i.e. `===`.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @param {number} fromIndex The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction strictIndexOf(array, value, fromIndex) {\n  var index = fromIndex - 1,\n      length = array.length;\n\n  while (++index < length) {\n    if (array[index] === value) {\n      return index;\n    }\n  }\n  return -1;\n}\n\nmodule.exports = strictIndexOf;\n","import _ from 'lodash';\nimport nod from './nod';\nimport forms from './models/forms';\n\nconst inputTagNames = [\n    'input',\n    'select',\n    'textarea',\n];\n\n/**\n * Apply class name to an input element on its type\n * @param {object} input\n * @param {string} formFieldClass\n * @return {object} Element itself\n */\nfunction classifyInput(input, formFieldClass) {\n    const $input = $(input);\n    const $formField = $input.parent(`.${formFieldClass}`);\n    const tagName = $input.prop('tagName').toLowerCase();\n\n    let className = `${formFieldClass}--${tagName}`;\n    let specificClassName;\n\n    // Input can be text/checkbox/radio etc...\n    if (tagName === 'input') {\n        const inputType = $input.prop('type');\n\n        if (_.includes(['radio', 'checkbox', 'submit'], inputType)) {\n            // ie: .form-field--checkbox, .form-field--radio\n            className = `${formFieldClass}--${_.camelCase(inputType)}`;\n        } else {\n            // ie: .form-field--input .form-field--inputText\n            specificClassName = `${className}${_.capitalize(inputType)}`;\n        }\n    }\n\n    // Apply class modifier\n    return $formField\n        .addClass(className)\n        .addClass(specificClassName);\n}\n\n/**\n * Apply class name to each input element in a form based on its type\n * @example\n * // Before\n * <form id=\"form\">\n *     <div class=\"form-field\">\n *         <input type=\"text\">\n *     </div>\n *     <div class=\"form-field\">\n *         <select>...</select>\n *     </div>\n * </form>\n *\n * classifyForm('#form', { formFieldClass: 'form-field' });\n *\n * // After\n * <div class=\"form-field form-field--input form-field--inputText\">...</div>\n * <div class=\"form-field form-field--select\">...</div>\n *\n * @param {string|object} formSelector - selector or element\n * @param {object} options\n * @return {jQuery} Element itself\n */\nexport function classifyForm(formSelector, options = {}) {\n    const $form = $(formSelector);\n    const $inputs = $form.find(inputTagNames.join(', '));\n\n    // Obtain options\n    const { formFieldClass = 'form-field' } = options;\n\n    // Classify each input in a form\n    $inputs.each((__, input) => {\n        classifyInput(input, formFieldClass);\n    });\n\n    return $form;\n}\n\n/**\n * Get id from given field\n * @param {object} $field JQuery field object\n * @return {string}\n */\nfunction getFieldId($field) {\n    const fieldId = $field.prop('name').match(/(\\[.*\\])/);\n\n    if (fieldId && fieldId.length !== 0) {\n        return fieldId[0];\n    }\n\n    return '';\n}\n\n/**\n * Insert hidden field after State/Province field\n * @param {object} $stateField JQuery field object\n */\nfunction insertStateHiddenField($stateField) {\n    const fieldId = getFieldId($stateField);\n    const stateFieldAttrs = {\n        type: 'hidden',\n        name: `FormFieldIsText${fieldId}`,\n        value: '1',\n    };\n\n    $stateField.after($('<input />', stateFieldAttrs));\n}\n\nconst Validators = {\n    /**\n     * Sets up a new validation when the form is dirty\n     * @param validator\n     * @param field\n     */\n    setEmailValidation: (validator, field) => {\n        if (field) {\n            validator.add({\n                selector: field,\n                validate: (cb, val) => {\n                    const result = forms.email(val);\n\n                    cb(result);\n                },\n                errorMessage: 'You must enter a valid email.',\n            });\n        }\n    },\n\n    /**\n     * Validate password fields\n     * @param validator\n     * @param passwordSelector\n     * @param password2Selector\n     * @param requirements\n     * @param isOptional\n     */\n    setPasswordValidation: (validator, passwordSelector, password2Selector, requirements, isOptional) => {\n        const $password = $(passwordSelector);\n        const passwordValidations = [\n            {\n                selector: passwordSelector,\n                validate: (cb, val) => {\n                    const result = val.length;\n\n                    if (isOptional) {\n                        return cb(true);\n                    }\n\n                    cb(result);\n                },\n                errorMessage: 'You must enter a password.',\n            },\n            {\n                selector: passwordSelector,\n                validate: (cb, val) => {\n                    const result = val.match(new RegExp(requirements.alpha))\n                        && val.match(new RegExp(requirements.numeric))\n                        && val.length >= requirements.minlength;\n\n                    // If optional and nothing entered, it is valid\n                    if (isOptional && val.length === 0) {\n                        return cb(true);\n                    }\n\n                    cb(result);\n                },\n                errorMessage: requirements.error,\n            },\n            {\n                selector: password2Selector,\n                validate: (cb, val) => {\n                    const result = val.length;\n\n                    if (isOptional) {\n                        return cb(true);\n                    }\n\n                    cb(result);\n                },\n                errorMessage: 'You must enter a password.',\n            },\n            {\n                selector: password2Selector,\n                validate: (cb, val) => {\n                    const result = val === $password.val();\n\n                    cb(result);\n                },\n                errorMessage: 'Your passwords do not match.',\n            },\n        ];\n\n        validator.add(passwordValidations);\n    },\n\n    /**\n     * Validate password fields\n     * @param {Nod} validator\n     * @param {Object} selectors\n     * @param {string} selectors.errorSelector\n     * @param {string} selectors.fieldsetSelector\n     * @param {string} selectors.formSelector\n     * @param {string} selectors.maxPriceSelector\n     * @param {string} selectors.minPriceSelector\n     */\n    setMinMaxPriceValidation: (validator, selectors) => {\n        const {\n            errorSelector,\n            fieldsetSelector,\n            formSelector,\n            maxPriceSelector,\n            minPriceSelector,\n        } = selectors;\n\n        validator.configure({\n            form: formSelector,\n            preventSubmit: true,\n            successClass: '_', // KLUDGE: Don't apply success class\n        });\n\n        validator.add({\n            errorMessage: 'Min price must be less than max. price.',\n            selector: minPriceSelector,\n            validate: `min-max:${minPriceSelector}:${maxPriceSelector}`,\n        });\n\n        validator.add({\n            errorMessage: 'Min price must be less than max. price.',\n            selector: maxPriceSelector,\n            validate: `min-max:${minPriceSelector}:${maxPriceSelector}`,\n        });\n\n        validator.add({\n            errorMessage: 'Max. price is required.',\n            selector: maxPriceSelector,\n            validate: 'presence',\n        });\n\n        validator.add({\n            errorMessage: 'Min. price is required.',\n            selector: minPriceSelector,\n            validate: 'presence',\n        });\n\n        validator.add({\n            errorMessage: 'Input must be greater than 0.',\n            selector: [minPriceSelector, maxPriceSelector],\n            validate: 'min-number:0',\n        });\n\n        validator.setMessageOptions({\n            selector: [minPriceSelector, maxPriceSelector],\n            parent: fieldsetSelector,\n            errorSpan: errorSelector,\n        });\n    },\n\n    /**\n     * Sets up a new validation when the form is dirty\n     * @param validator\n     * @param field\n     */\n    setStateCountryValidation: (validator, field) => {\n        if (field) {\n            validator.add({\n                selector: field,\n                validate: 'presence',\n                errorMessage: 'The \\'State/Province\\' field cannot be blank.',\n            });\n        }\n    },\n\n    /**\n     * Removes classes from dirty form if previously checked\n     * @param field\n     */\n    cleanUpStateValidation: (field) => {\n        const $fieldClassElement = $((`[data-type=\"${field.data('fieldType')}\"]`));\n\n        Object.keys(nod.classes).forEach((value) => {\n            if ($fieldClassElement.hasClass(nod.classes[value])) {\n                $fieldClassElement.removeClass(nod.classes[value]);\n            }\n        });\n    },\n};\n\nexport { Validators, insertStateHiddenField };\n","var baseIndexOf = require('./_baseIndexOf');\n\n/**\n * A specialized version of `_.includes` for arrays without support for\n * specifying an index to search from.\n *\n * @private\n * @param {Array} [array] The array to inspect.\n * @param {*} target The value to search for.\n * @returns {boolean} Returns `true` if `target` is found, else `false`.\n */\nfunction arrayIncludes(array, value) {\n  var length = array == null ? 0 : array.length;\n  return !!length && baseIndexOf(array, value, 0) > -1;\n}\n\nmodule.exports = arrayIncludes;\n","var createCaseFirst = require('./_createCaseFirst');\n\n/**\n * Converts the first character of `string` to upper case.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category String\n * @param {string} [string=''] The string to convert.\n * @returns {string} Returns the converted string.\n * @example\n *\n * _.upperFirst('fred');\n * // => 'Fred'\n *\n * _.upperFirst('FRED');\n * // => 'FRED'\n */\nvar upperFirst = createCaseFirst('toUpperCase');\n\nmodule.exports = upperFirst;\n","var castSlice = require('./_castSlice'),\n    hasUnicode = require('./_hasUnicode'),\n    stringToArray = require('./_stringToArray'),\n    toString = require('./toString');\n\n/**\n * Creates a function like `_.lowerFirst`.\n *\n * @private\n * @param {string} methodName The name of the `String` case method to use.\n * @returns {Function} Returns the new case function.\n */\nfunction createCaseFirst(methodName) {\n  return function(string) {\n    string = toString(string);\n\n    var strSymbols = hasUnicode(string)\n      ? stringToArray(string)\n      : undefined;\n\n    var chr = strSymbols\n      ? strSymbols[0]\n      : string.charAt(0);\n\n    var trailing = strSymbols\n      ? castSlice(strSymbols, 1).join('')\n      : string.slice(1);\n\n    return chr[methodName]() + trailing;\n  };\n}\n\nmodule.exports = createCaseFirst;\n","var baseSlice = require('./_baseSlice');\n\n/**\n * Casts `array` to a slice if it's needed.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {number} start The start position.\n * @param {number} [end=array.length] The end position.\n * @returns {Array} Returns the cast slice.\n */\nfunction castSlice(array, start, end) {\n  var length = array.length;\n  end = end === undefined ? length : end;\n  return (!start && end >= length) ? array : baseSlice(array, start, end);\n}\n\nmodule.exports = castSlice;\n","/**\n * The base implementation of `_.slice` without an iteratee call guard.\n *\n * @private\n * @param {Array} array The array to slice.\n * @param {number} [start=0] The start position.\n * @param {number} [end=array.length] The end position.\n * @returns {Array} Returns the slice of `array`.\n */\nfunction baseSlice(array, start, end) {\n  var index = -1,\n      length = array.length;\n\n  if (start < 0) {\n    start = -start > length ? 0 : (length + start);\n  }\n  end = end > length ? length : end;\n  if (end < 0) {\n    end += length;\n  }\n  length = start > end ? 0 : ((end - start) >>> 0);\n  start >>>= 0;\n\n  var result = Array(length);\n  while (++index < length) {\n    result[index] = array[index + start];\n  }\n  return result;\n}\n\nmodule.exports = baseSlice;\n","var asciiToArray = require('./_asciiToArray'),\n    hasUnicode = require('./_hasUnicode'),\n    unicodeToArray = require('./_unicodeToArray');\n\n/**\n * Converts `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction stringToArray(string) {\n  return hasUnicode(string)\n    ? unicodeToArray(string)\n    : asciiToArray(string);\n}\n\nmodule.exports = stringToArray;\n","/**\n * Converts an ASCII `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction asciiToArray(string) {\n  return string.split('');\n}\n\nmodule.exports = asciiToArray;\n","/** Used to compose unicode character classes. */\nvar rsAstralRange = '\\\\ud800-\\\\udfff',\n    rsComboMarksRange = '\\\\u0300-\\\\u036f',\n    reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n    rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n    rsVarRange = '\\\\ufe0e\\\\ufe0f';\n\n/** Used to compose unicode capture groups. */\nvar rsAstral = '[' + rsAstralRange + ']',\n    rsCombo = '[' + rsComboRange + ']',\n    rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]',\n    rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\n    rsNonAstral = '[^' + rsAstralRange + ']',\n    rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}',\n    rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]',\n    rsZWJ = '\\\\u200d';\n\n/** Used to compose unicode regexes. */\nvar reOptMod = rsModifier + '?',\n    rsOptVar = '[' + rsVarRange + ']?',\n    rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\n    rsSeq = rsOptVar + reOptMod + rsOptJoin,\n    rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';\n\n/** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */\nvar reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');\n\n/**\n * Converts a Unicode `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction unicodeToArray(string) {\n  return string.match(reUnicode) || [];\n}\n\nmodule.exports = unicodeToArray;\n","var capitalize = require('./capitalize'),\n    createCompounder = require('./_createCompounder');\n\n/**\n * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to convert.\n * @returns {string} Returns the camel cased string.\n * @example\n *\n * _.camelCase('Foo Bar');\n * // => 'fooBar'\n *\n * _.camelCase('--foo-bar--');\n * // => 'fooBar'\n *\n * _.camelCase('__FOO_BAR__');\n * // => 'fooBar'\n */\nvar camelCase = createCompounder(function(result, word, index) {\n  word = word.toLowerCase();\n  return result + (index ? capitalize(word) : word);\n});\n\nmodule.exports = camelCase;\n","var arrayReduce = require('./_arrayReduce'),\n    deburr = require('./deburr'),\n    words = require('./words');\n\n/** Used to compose unicode capture groups. */\nvar rsApos = \"['\\u2019]\";\n\n/** Used to match apostrophes. */\nvar reApos = RegExp(rsApos, 'g');\n\n/**\n * Creates a function like `_.camelCase`.\n *\n * @private\n * @param {Function} callback The function to combine each word.\n * @returns {Function} Returns the new compounder function.\n */\nfunction createCompounder(callback) {\n  return function(string) {\n    return arrayReduce(words(deburr(string).replace(reApos, '')), callback, '');\n  };\n}\n\nmodule.exports = createCompounder;\n","/**\n * A specialized version of `_.reduce` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {*} [accumulator] The initial value.\n * @param {boolean} [initAccum] Specify using the first element of `array` as\n *  the initial value.\n * @returns {*} Returns the accumulated value.\n */\nfunction arrayReduce(array, iteratee, accumulator, initAccum) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  if (initAccum && length) {\n    accumulator = array[++index];\n  }\n  while (++index < length) {\n    accumulator = iteratee(accumulator, array[index], index, array);\n  }\n  return accumulator;\n}\n\nmodule.exports = arrayReduce;\n","/**\n * This method returns the first argument it receives.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'a': 1 };\n *\n * console.log(_.identity(object) === object);\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\nmodule.exports = identity;\n","var asciiWords = require('./_asciiWords'),\n    hasUnicodeWord = require('./_hasUnicodeWord'),\n    toString = require('./toString'),\n    unicodeWords = require('./_unicodeWords');\n\n/**\n * Splits `string` into an array of its words.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to inspect.\n * @param {RegExp|string} [pattern] The pattern to match words.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {Array} Returns the words of `string`.\n * @example\n *\n * _.words('fred, barney, & pebbles');\n * // => ['fred', 'barney', 'pebbles']\n *\n * _.words('fred, barney, & pebbles', /[^, ]+/g);\n * // => ['fred', 'barney', '&', 'pebbles']\n */\nfunction words(string, pattern, guard) {\n  string = toString(string);\n  pattern = guard ? undefined : pattern;\n\n  if (pattern === undefined) {\n    return hasUnicodeWord(string) ? unicodeWords(string) : asciiWords(string);\n  }\n  return string.match(pattern) || [];\n}\n\nmodule.exports = words;\n","/** Used to match words composed of alphanumeric characters. */\nvar reAsciiWord = /[^\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\x7f]+/g;\n\n/**\n * Splits an ASCII `string` into an array of its words.\n *\n * @private\n * @param {string} The string to inspect.\n * @returns {Array} Returns the words of `string`.\n */\nfunction asciiWords(string) {\n  return string.match(reAsciiWord) || [];\n}\n\nmodule.exports = asciiWords;\n","/** Used to detect strings that need a more robust regexp to match words. */\nvar reHasUnicodeWord = /[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;\n\n/**\n * Checks if `string` contains a word composed of Unicode symbols.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {boolean} Returns `true` if a word is found, else `false`.\n */\nfunction hasUnicodeWord(string) {\n  return reHasUnicodeWord.test(string);\n}\n\nmodule.exports = hasUnicodeWord;\n","/** Used to compose unicode character classes. */\nvar rsAstralRange = '\\\\ud800-\\\\udfff',\n    rsComboMarksRange = '\\\\u0300-\\\\u036f',\n    reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n    rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n    rsDingbatRange = '\\\\u2700-\\\\u27bf',\n    rsLowerRange = 'a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff',\n    rsMathOpRange = '\\\\xac\\\\xb1\\\\xd7\\\\xf7',\n    rsNonCharRange = '\\\\x00-\\\\x2f\\\\x3a-\\\\x40\\\\x5b-\\\\x60\\\\x7b-\\\\xbf',\n    rsPunctuationRange = '\\\\u2000-\\\\u206f',\n    rsSpaceRange = ' \\\\t\\\\x0b\\\\f\\\\xa0\\\\ufeff\\\\n\\\\r\\\\u2028\\\\u2029\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000',\n    rsUpperRange = 'A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde',\n    rsVarRange = '\\\\ufe0e\\\\ufe0f',\n    rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;\n\n/** Used to compose unicode capture groups. */\nvar rsApos = \"['\\u2019]\",\n    rsBreak = '[' + rsBreakRange + ']',\n    rsCombo = '[' + rsComboRange + ']',\n    rsDigits = '\\\\d+',\n    rsDingbat = '[' + rsDingbatRange + ']',\n    rsLower = '[' + rsLowerRange + ']',\n    rsMisc = '[^' + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + ']',\n    rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]',\n    rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\n    rsNonAstral = '[^' + rsAstralRange + ']',\n    rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}',\n    rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]',\n    rsUpper = '[' + rsUpperRange + ']',\n    rsZWJ = '\\\\u200d';\n\n/** Used to compose unicode regexes. */\nvar rsMiscLower = '(?:' + rsLower + '|' + rsMisc + ')',\n    rsMiscUpper = '(?:' + rsUpper + '|' + rsMisc + ')',\n    rsOptContrLower = '(?:' + rsApos + '(?:d|ll|m|re|s|t|ve))?',\n    rsOptContrUpper = '(?:' + rsApos + '(?:D|LL|M|RE|S|T|VE))?',\n    reOptMod = rsModifier + '?',\n    rsOptVar = '[' + rsVarRange + ']?',\n    rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\n    rsOrdLower = '\\\\d*(?:1st|2nd|3rd|(?![123])\\\\dth)(?=\\\\b|[A-Z_])',\n    rsOrdUpper = '\\\\d*(?:1ST|2ND|3RD|(?![123])\\\\dTH)(?=\\\\b|[a-z_])',\n    rsSeq = rsOptVar + reOptMod + rsOptJoin,\n    rsEmoji = '(?:' + [rsDingbat, rsRegional, rsSurrPair].join('|') + ')' + rsSeq;\n\n/** Used to match complex or compound words. */\nvar reUnicodeWord = RegExp([\n  rsUpper + '?' + rsLower + '+' + rsOptContrLower + '(?=' + [rsBreak, rsUpper, '$'].join('|') + ')',\n  rsMiscUpper + '+' + rsOptContrUpper + '(?=' + [rsBreak, rsUpper + rsMiscLower, '$'].join('|') + ')',\n  rsUpper + '?' + rsMiscLower + '+' + rsOptContrLower,\n  rsUpper + '+' + rsOptContrUpper,\n  rsOrdUpper,\n  rsOrdLower,\n  rsDigits,\n  rsEmoji\n].join('|'), 'g');\n\n/**\n * Splits a Unicode `string` into an array of its words.\n *\n * @private\n * @param {string} The string to inspect.\n * @returns {Array} Returns the words of `string`.\n */\nfunction unicodeWords(string) {\n  return string.match(reUnicodeWord) || [];\n}\n\nmodule.exports = unicodeWords;\n","import nod from '../common/nod';\nimport { CollapsibleEvents } from '../common/collapsible';\nimport forms from '../common/models/forms';\n\nexport default class {\n    constructor($reviewForm) {\n        this.validator = nod({\n            submit: $reviewForm.find('input[type=\"submit\"]'),\n        });\n\n        this.$reviewsContent = $('#product-reviews');\n        this.$collapsible = $('[data-collapsible]', this.$reviewsContent);\n\n        this.initLinkBind();\n        this.injectPaginationLink();\n        this.collapseReviews();\n    }\n\n    /**\n     * On initial page load, the user clicks on \"(12 Reviews)\" link\n     * The browser jumps to the review page and should expand the reviews section\n     */\n    initLinkBind() {\n        const $content = $('#productReviews-content', this.$reviewsContent);\n\n        $('.productView-reviewLink').on('click', () => {\n            if (!$content.hasClass('is-open')) {\n                this.$collapsible.trigger(CollapsibleEvents.click);\n            }\n        });\n    }\n\n    collapseReviews() {\n        // We're in paginating state, do not collapse\n        if (window.location.hash && window.location.hash.indexOf('#product-reviews') === 0) {\n            return;\n        }\n\n        // force collapse on page load\n        this.$collapsible.trigger(CollapsibleEvents.click);\n    }\n\n    /**\n     * Inject ID into the pagination link\n     */\n    injectPaginationLink() {\n        const $nextLink = $('.pagination-item--next .pagination-link', this.$reviewsContent);\n        const $prevLink = $('.pagination-item--previous .pagination-link', this.$reviewsContent);\n\n        if ($nextLink.length) {\n            $nextLink.attr('href', `${$nextLink.attr('href')} #product-reviews`);\n        }\n\n        if ($prevLink.length) {\n            $prevLink.attr('href', `${$prevLink.attr('href')} #product-reviews`);\n        }\n    }\n\n    registerValidation(context) {\n        this.context = context;\n        this.validator.add([{\n            selector: '[name=\"revrating\"]',\n            validate: 'presence',\n            errorMessage: this.context.reviewRating,\n        }, {\n            selector: '[name=\"revtitle\"]',\n            validate: 'presence',\n            errorMessage: this.context.reviewSubject,\n        }, {\n            selector: '[name=\"revtext\"]',\n            validate: 'presence',\n            errorMessage: this.context.reviewComment,\n        }, {\n            selector: '[name=\"email\"]',\n            validate: (cb, val) => {\n                const result = forms.email(val);\n                cb(result);\n            },\n            errorMessage: this.context.reviewEmail,\n        }]);\n\n        return this.validator;\n    }\n\n    validate() {\n        return this.validator.performCheck();\n    }\n}\n","export class VideoGallery {\n    constructor($element) {\n        this.$player = $element.find('[data-video-player]');\n        this.$videos = $element.find('[data-video-item]');\n        this.currentVideo = {};\n        this.bindEvents();\n    }\n\n    selectNewVideo(e) {\n        e.preventDefault();\n\n        const $target = $(e.currentTarget);\n\n        this.currentVideo = {\n            id: $target.data('videoId'),\n            $selectedThumb: $target,\n        };\n\n        this.setMainVideo();\n        this.setActiveThumb();\n    }\n\n    setMainVideo() {\n        this.$player.attr('src', `//www.youtube.com/embed/${this.currentVideo.id}`);\n    }\n\n    setActiveThumb() {\n        this.$videos.removeClass('is-active');\n        this.currentVideo.$selectedThumb.addClass('is-active');\n    }\n\n    bindEvents() {\n        this.$videos.on('click', this.selectNewVideo.bind(this));\n    }\n}\n\nexport default function videoGallery() {\n    const pluginKey = 'video-gallery';\n    const $videoGallery = $(`[data-${pluginKey}]`);\n\n    $videoGallery.each((index, element) => {\n        const $el = $(element);\n        const isInitialized = $el.data(pluginKey) instanceof VideoGallery;\n\n        if (isInitialized) {\n            return;\n        }\n\n        $el.data(pluginKey, new VideoGallery($el));\n    });\n}\n"],"sourceRoot":""}